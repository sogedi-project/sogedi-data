---
title: "Calculation and analysis of variables"
subtitle: "Socioeconomic and Gender Disparities: A Multi-Country Study"
author: "Andreas Laffert, Research asistant"
date: today
lang: en
fontsize: 12pt
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 4
    toc-expand: 2
    toc-title: Contents
    number-sections: true
    number-depth: 4
    theme:
      - cosmo
      - "../sogedi.scss"
    code-link: true
    title-block-banner: true
  pdf:
    number-sections: true
    number-depth: 3
editor_options: 
  chunk_output_type: console
bibliography: "../input/bib/sogedi-data.bib"
csl: "../input/bib/apa6.csl"
link-citations: true
linkcolor: blue
---

# Presentation

This document details the code used for calculating and analyzing variables in the project "Socioeconomic and Gender Disparities: A Multi-Country Study." The dataset utilized is `db_proc.RData`.

For certain items, we will evaluate the factorial structures based on their original sources and the publications from which they were derived. However, alternative structures may be considered during the data exploration phase.

```{r}
#| label: set
#| echo: false
#| message: false
#| warning: false

library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)

table_format <- if(is_html_output()) {
  "html"
} else if(is_latex_output()) {
  "latex"
}
table_format2 <- if(is_html_output()) {
  T
} else if(is_latex_output()) {
  F
}

options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
```

# Libraries

First, we load the necessary libraries. In this case, we use `pacman::p_load` to load and call libraries in one move. 


```{r}
#| label: libraries

if (! require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               sjmisc, 
               sjPlot,
               here,
               lavaan,
               psych,
               rstatix,
               ggdist,
               patchwork,
               sjlabelled,
               gtools,
               haven)

options(scipen=999)
rm(list = ls())

```

# Data

We load the database from the local path. Modify this later.

```{r}
#| label: data

load(file = here("output/data/db_proc.RData"))

glimpse(db_proc)
```

We have 4,209 cases or rows and 212 variables or columns.

# Functions

```{r}
#| label: functions


describe_kable <- function(data, vars) {
  psych::describe(data[, vars]) %>%
    kableExtra::kable(format = "markdown", digits = 3)
}

fit_correlations <- function(data, vars) {
  M <- cor(data[, vars], method = "pearson", use = "complete.obs")
  P <- psych::polychoric(data[, vars])
  
  diag(M) <- NA
  diag(P$rho) <- NA
  
  rnames <- paste0(LETTERS[1:length(vars)], ". ", vars)
  cnames <- paste0("(", LETTERS[1:length(vars)], ")")
  
  rownames(M) <- rnames
  colnames(M) <- cnames
  rownames(P$rho) <- rnames
  colnames(P$rho) <- cnames
  
  list(pearson = M, polychoric = P$rho)
}

corr_plots <- function(cor_list, data, db_name = "SOGEDI") {
  p1 <- wrap_elements(
    ~corrplot::corrplot(
      cor_list$pearson,
      method = "color",
      type = "upper",
      col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
      tl.pos = "lt",
      tl.col = "black",
      addrect = 2,
      rect.col = "black",
      addCoef.col = "white",
      cl.cex = 0.8,
      cl.align.text = 'l',
      number.cex = 1.1,
      na.label = "-",
      bg = "white"
    )
  ) + labs(title = 'I. Pearson correlations')
  
  p2 <- wrap_elements(
    ~corrplot::corrplot(
      cor_list$polychoric,
      method = "color",
      type = "upper",
      col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
      tl.pos = "lt",
      tl.col = "black",
      addrect = 2,
      rect.col = "black",
      addCoef.col = "white",
      cl.cex = 0.8,
      cl.align.text = 'l',
      number.cex = 1.1,
      na.label = "-",
      bg = "white"
    )
  ) + labs(title = 'II. Polychoric correlations')
  
  p1 / p2 +
    plot_annotation(
      caption = paste0(
        "Source: Authors calculation based on ", db_name, 
        " database (n=", nrow(data), ")"
      )
    )
}

alphas <- function(data, vars, new_var) {
  alpha_cronbach <- psych::alpha(data[, vars])
  raw_alpha <- alpha_cronbach$total$raw_alpha
  
  poly_matrix <- psych::polychoric(data[, vars])
  alpha_ordinal <- psych::alpha(poly_matrix$rho)
  ord_alpha <- alpha_ordinal$total$raw_alpha
  
  data[[new_var]] <- rowMeans(data[, vars], na.rm = TRUE)
  new_var_summary <- summary(data[[new_var]])
  
  list(
    raw_alpha       = raw_alpha,
    ord_alpha       = ord_alpha,
    new_var_summary = new_var_summary
  )
}

cfa_tab_loadings <- function(model) {
  
  sum_loadings <- standardizedSolution(model) %>%
    dplyr::filter(op == "=~") %>%
    dplyr::select(lhs, rhs, est.std) %>%
    rename(
      Factor   = lhs,
      Indicator = rhs,
      Loading  = est.std
    )
  
  loadings_table <- sum_loadings %>%
    kableExtra::kable(
      format    = "markdown",  
      digits    = 3,
      booktabs  = TRUE,
      col.names = c("Factor", "Indicator", "Loading"),
      caption   = NULL
    ) %>%
    kableExtra::kable_styling(
      full_width        = FALSE,
      font_size         = 11,
      latex_options     = "HOLD_position",
      bootstrap_options = c("striped", "bordered")
    )
  
    list(
    loadings_table = loadings_table)
  
}

cfa_tab_fit <- function(models, 
                              country_names = NULL, 
                              colnames_fit  = c("","$N$","Estimator","$\\chi^2$ (df)","CFI","TLI","RMSEA 90% CI [Lower-Upper]", "SRMR", "AIC")) {
 
  
  get_fit_df <- function(model) {
    sum_fit <- fitmeasures(model, output = "matrix")[c("chisq","pvalue","df","cfi","tli",
                                                       "rmsea","rmsea.ci.lower","rmsea.ci.upper",
                                                       "srmr", "aic"),]
    sum_fit$nobs <- nobs(model)
    sum_fit$est  <- summary(model)$optim$estimator
    sum_fit <- data.frame(sum_fit) %>%
      dplyr::mutate(
        dplyr::across(
          .cols = c(cfi, tli, rmsea, rmsea.ci.lower, rmsea.ci.upper, srmr, aic),
          .fns  = ~ round(., 3)
        ),
        stars   = gtools::stars.pval(pvalue),
        chisq   = paste0(round(chisq,3), " (", df, ") ", stars),
        rmsea.ci= paste0(rmsea, " [", rmsea.ci.lower, "-", rmsea.ci.upper, "]")
      ) %>%
      dplyr::select(nobs, est, chisq, cfi, tli, rmsea.ci, srmr, aic)
    
    return(sum_fit)
  }
  
  fit_list <- purrr::map(models, get_fit_df)
  
  for (i in seq_along(fit_list)) {
    fit_list[[i]]$country <- country_names[i]
  }
  
  sum_fit <- dplyr::bind_rows(fit_list)
  
  fit_table <- sum_fit %>%
    dplyr::select(country, dplyr::everything()) %>%
    kableExtra::kable(
      format     = "markdown", 
      digits     = 3,
      booktabs   = TRUE,
      col.names  = colnames_fit,
      caption    = NULL
    ) %>%
    kableExtra::kable_styling(
      full_width        = TRUE,
      font_size         = 11,
      latex_options     = "HOLD_position",
      bootstrap_options = c("striped", "bordered")
    )
  
  return(
    list(
      fit_table = fit_table,
      sum_fit = sum_fit)
  )
}


fit_correlations_pairwise <- function(data, vars) {
  M <- cor(data[, vars], method = "pearson", use = "pairwise.complete.obs")
  P <- psych::polychoric(data[, vars], global = FALSE)
  
  diag(M) <- NA
  diag(P$rho) <- NA
  
  rnames <- paste0(LETTERS[1:length(vars)], ". ", vars)
  cnames <- paste0("(", LETTERS[1:length(vars)], ")")
  
  rownames(M) <- rnames
  colnames(M) <- cnames
  rownames(P$rho) <- rnames
  colnames(P$rho) <- cnames
  
  list(pearson = M, polychoric = P$rho)
}

```


# Processing and analysis


## Block 1. Class inequality / Attitudes

### Perception of economic inequality in daily live


The items to capture individual subjective perception of daily economic inequality came from previous research from GarcÃ­a-Castro et al. [-@garcia-castro_know_2019]. For the SOGEDI study we selected the items from the original scale that had the highest saturation on the construct and could potentially be more suitable for application in different countries.

##### **Descriptive analysis**

```{r}
#| label: tbl-desc1
#| tbl-cap: "Descriptive statistics of Perception of economic inequality in daily live"
#| tbl-cap-location: top

describe_kable(db_proc, c("eco_in_1", "eco_in_2", "eco_in_3"))

```


```{r}
#| collapse: false
# 1. Correlations

# fit pearson and polychoric
res1 <- fit_correlations(db_proc, c("eco_in_1", "eco_in_2", "eco_in_3"))

```

```{r}
#| label: fig-1
#| fig-cap: "Correlation matrixes of Perception of economic inequality in daily live"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res1, db_proc, "SOGEDI")

```

##### **Internal consistency**

```{r}
# 2. Alpha

mi_variable <- "eco_in"
result1 <- alphas(db_proc, c("eco_in_1", "eco_in_2", "eco_in_3"), mi_variable)

result1$raw_alpha
result1$ord_alpha
result1$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("eco_in_1", "eco_in_2", "eco_in_3")], na.rm = TRUE)
```

##### **Confirmatory Factor Analysis**

```{r}
# 3. CFA

mardia(db_proc[,c("eco_in_1", "eco_in_2", "eco_in_3")], 
       na.rm = T, plot=F)

# model
model_cfa <- ' perc_eco_inequality =~ eco_in_1 + eco_in_2 + eco_in_3 '

# estimation 
m1_cfa <- cfa(model = model_cfa, 
              data = db_proc,
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m1_cfa_arg <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m1_cfa_cl <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m1_cfa_col <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m1_cfa_es <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m1_cfa_mex <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

```


```{r}
#| label: tbl-1
#| tbl-cap: "Standardized Factor Loadings of Perception of economic inequality in daily live all countries"
#| tbl-cap-location: top
#| warning: false

cfa_tab_loadings(m1_cfa)$loadings_table


```

```{r}
#| label: tbl-2
#| tbl-cap: "Summary fit indices of Perception of economic inequality in daily live"
#| tbl-cap-location: top
#| warning: false

cfa_tab_fit(
  models = list(m1_cfa, m1_cfa_arg, m1_cfa_cl, m1_cfa_col, m1_cfa_es, m1_cfa_mex),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$fit_table


```

### Ambivalent classism

The items to capture ambivalent classism came from previous research from Sainz et al. [-@sainz_spanish_2021]. For the SOGEDI study we used all items from the paternalistic/complementary dimensions of the scale adapted by the authors. For the hostile dimension, we selected the four items most strongly associated with the construct, based on the scale adaptation, while omitting items that could be misinterpreted in other spanish speaker contexts.


#### Protective paternalism toward poor women and men

##### **Descriptive analysis**

```{r}
#| label: tbl-desc2
#| tbl-cap: "Descriptive statistics of Protective paternalism toward poor women and men"
#| tbl-cap-location: top

describe_kable(db_proc, c("pp_pw_1", "pp_pw_2", "pp_pw_3", "pp_pw_4", "pp_pm_1", "pp_pm_2", "pp_pm_3", "pp_pm_4"))

```


```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("pp_pw_1", "pp_pw_2", "pp_pw_3", "pp_pw_4"))


res3 <- fit_correlations(db_proc, c("pp_pm_1", "pp_pm_2", "pp_pm_3", "pp_pm_4"))

```

```{r}
#| label: fig-2
#| fig-cap: "Correlation matrixes of Protective paternalism toward poor women"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```


```{r}
#| label: fig-3
#| fig-cap: "Correlation matrixes of Protective paternalism toward poor men"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res3, db_proc, "SOGEDI")

```

##### **Internal consistency**

```{r}
# 2. Alpha

mi_variable <- "pp_pw"
result2 <- alphas(db_proc, c("pp_pw_1", "pp_pw_2", "pp_pw_3", "pp_pw_4"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("pp_pw_1", "pp_pw_2", "pp_pw_3", "pp_pw_4")], na.rm = TRUE)
```


```{r}
# 2. Alpha

mi_variable <- "pp_pm"
result3 <- alphas(db_proc, c("pp_pm_1", "pp_pm_2", "pp_pm_3", "pp_pm_4"), mi_variable)

result3$raw_alpha
result3$ord_alpha
result3$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("pp_pm_1", "pp_pm_2", "pp_pm_3", "pp_pm_4")], na.rm = TRUE)
```

#### Complementary class diferenciation toward poor women and men

##### **Descriptive analysis**

```{r}
#| label: tbl-desc3
#| tbl-cap: "Descriptive statistics of Complementary class diferenciation toward poor women and men"
#| tbl-cap-location: top

describe_kable(db_proc, c("cc_pw_1", "cc_pw_2", "cc_pw_3", "cc_pw_4", "cc_pm_1", "cc_pm_2", "cc_pm_3", "cc_pm_4"))

```


```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("cc_pw_1", "cc_pw_2", "cc_pw_3", "cc_pw_4"))


res3 <- fit_correlations(db_proc, c("cc_pm_1", "cc_pm_2", "cc_pm_3", "cc_pm_4"))

```

```{r}
#| label: fig-4
#| fig-cap: "Correlation matrixes of Complementary class diferenciation toward poor women"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```


```{r}
#| label: fig-5
#| fig-cap: "Correlation matrixes of Complementary class diferenciation toward poor men"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res3, db_proc, "SOGEDI")

```

##### **Internal consistency**
```{r}
# 2. Alpha

mi_variable <- "cc_pw"
result2 <- alphas(db_proc, c("cc_pw_1", "cc_pw_2", "cc_pw_3", "cc_pw_4"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("cc_pw_1", "cc_pw_2", "cc_pw_3", "cc_pw_4")], na.rm = TRUE)
```


```{r}
# 2. Alpha

mi_variable <- "cc_pm"
result3 <- alphas(db_proc, c("cc_pm_1", "cc_pm_2", "cc_pm_3", "cc_pm_4"), mi_variable)

result3$raw_alpha
result3$ord_alpha
result3$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("cc_pm_1", "cc_pm_2", "cc_pm_3", "cc_pm_4")], na.rm = TRUE)
```


#### Hostile classism toward poor women and men


##### **Descriptive analysis**

```{r}
#| label: tbl-desc4
#| tbl-cap: "Descriptive statistics of Hostile classism toward poor women and men"
#| tbl-cap-location: top

describe_kable(db_proc, c("hc_pw_1","hc_pw_2","hc_pw_3","hc_pw_4", "hc_pm_1","hc_pm_2","hc_pm_3","hc_pm_4"))

```


```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("hc_pw_1","hc_pw_2","hc_pw_3","hc_pw_4"))

res3 <- fit_correlations(db_proc, c("hc_pm_1","hc_pm_2","hc_pm_3","hc_pm_4"))

```

```{r}
#| label: fig-6
#| fig-cap: "Correlation matrixes of Hostile classism toward poor women"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```


```{r}
#| label: fig-7
#| fig-cap: "Correlation matrixes of Hostile classism toward poor men"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res3, db_proc, "SOGEDI")

```

##### **Internal consistency**
```{r}
# 2. Alpha

mi_variable <- "hc_pw"
result2 <- alphas(db_proc, c("hc_pw_1","hc_pw_2","hc_pw_3","hc_pw_4"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("hc_pw_1","hc_pw_2","hc_pw_3","hc_pw_4")], na.rm = TRUE)
```


```{r}
# 2. Alpha

mi_variable <- "hc_pm"
result3 <- alphas(db_proc, c("hc_pm_1","hc_pm_2","hc_pm_3","hc_pm_4"), mi_variable)

result3$raw_alpha
result3$ord_alpha
result3$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("hc_pm_1","hc_pm_2","hc_pm_3","hc_pm_4")], na.rm = TRUE)
```


##### **Confirmatory Factor Analysis**

```{r}
# 3. CFA

mardia(db_proc[,c("pp_pw_1", "pp_pw_2", "pp_pw_3", "pp_pw_4", 
                  "cc_pw_1", "cc_pw_2", "cc_pw_3", "cc_pw_4",
                  "hc_pw_1", "hc_pw_2", "hc_pw_3", "hc_pw_4")], 
       na.rm = T, plot=F)


# model
model_cfa <- ' 
  aci_pp =~ pp_pw_1 + pp_pw_2 + pp_pw_3 + pp_pw_4
  aci_cc =~ cc_pw_1 + cc_pw_2 + cc_pw_3 + cc_pw_4
  aci_hc =~ hc_pw_1 + hc_pw_2 + hc_pw_3 + hc_pw_4 
  aci =~ aci_pp + aci_cc + aci_hc '

# estimation 
m2_cfa <- cfa(model = model_cfa, 
              data = db_proc,
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m2_cfa_arg <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m2_cfa_cl <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m2_cfa_col <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m2_cfa_es <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m2_cfa_mex <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

```


```{r}
#| label: tbl-3
#| tbl-cap: "Standardized Factor Loadings of Ambivalent Classism Inventory: poor women all countries"
#| tbl-cap-location: top

cfa_tab_loadings(m2_cfa)$loadings_table

```

```{r}
#| label: tbl-4
#| tbl-cap: "Summary fit indices of Ambivalent Classism Inventory: poor women"
#| tbl-cap-location: top

cfa_tab_fit(
  models = list(m2_cfa, m2_cfa_arg, m2_cfa_cl, m2_cfa_col, m2_cfa_es, m2_cfa_mex),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$fit_table


```


```{r}
# 3. CFA

mardia(db_proc[,c("pp_pm_1", "pp_pm_2", "pp_pm_3", "pp_pm_4", 
                  "cc_pm_1", "cc_pm_2", "cc_pm_3", "cc_pm_4",
                  "hc_pm_1", "hc_pm_2", "hc_pm_3", "hc_pm_4")], 
       na.rm = T, plot=F)


# model
model_cfa <- ' 
  aci_pp =~ pp_pm_1 + pp_pm_2 + pp_pm_3 + pp_pm_4
  aci_cc =~ cc_pm_1 + cc_pm_2 + cc_pm_3 + cc_pm_4
  aci_hc =~ hc_pm_1 + hc_pm_2 + hc_pm_3 + hc_pm_4 
  aci =~ aci_pp + aci_cc + aci_hc '

# estimation 
m3_cfa <- cfa(model = model_cfa, 
              data = db_proc,
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m3_cfa_arg <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m3_cfa_cl <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m3_cfa_col <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m3_cfa_es <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m3_cfa_mex <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 
```


```{r}
#| label: tbl-5
#| tbl-cap: "Standardized Factor Loadings of Ambivalent Classism Inventory: poor men"
#| tbl-cap-location: top

cfa_tab_loadings(m3_cfa)$loadings_table


```

```{r}
#| label: tbl-6
#| tbl-cap: "Summary fit indices of Ambivalent Classism Inventory: poor men"
#| tbl-cap-location: top

cfa_tab_fit(
  models = list(m3_cfa, m3_cfa_arg, m3_cfa_cl, m3_cfa_col, m3_cfa_es, m3_cfa_mex),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$fit_table


```


## Block 2. Gender inequality / Attitudes

### Ambivalent sexism

The items to capture ambivalent sexism came from previous research from Rollero et al. [-@rollero_psychometric_2014] and RodrÃ­guez-Castro et al. [-@rodriguezcastro_validacion_2009]. For the SOGEDI study ee included the Ambivalent Sexism Inventory (ASI) and the Ambivalence Toward Men Inventory (AMI), attempting to have a structure similar to that of ambivalent classim scale. We used the short versions of the scales and selected the items that best fit our study. The items are from the adaptation to Spanish.


#### Paternalism sexism toward women

##### **Descriptive results**

```{r}
#| label: tbl-desc5
#| tbl-cap: "Descriptive statistics of Paternalism sexism toward women"
#| tbl-cap-location: top

describe_kable(db_proc, c("ps_m_1", "ps_m_2", "ps_m_3"))

```

```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("ps_m_1", "ps_m_2", "ps_m_3"))

```

```{r}
#| label: fig-8
#| fig-cap: "Correlation matrixes of Paternalism sexism toward women"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```


##### **Internal consistency**

```{r}
# 2. Alpha

mi_variable <- "ps_m"
result2 <- alphas(db_proc, c("ps_m_1", "ps_m_2", "ps_m_3"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("ps_m_1", "ps_m_2", "ps_m_3")], na.rm = TRUE)
```

#### Hostility sexism toward women

##### **Descriptive results**

```{r}
#| label: tbl-desc6
#| tbl-cap: "Descriptive statistics of Hostility sexism toward women"
#| tbl-cap-location: top

describe_kable(db_proc, c("hs_m_1", "hs_m_2", "hs_m_3"))

```

```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("hs_m_1", "hs_m_2", "hs_m_3"))

```

```{r}
#| label: fig-9
#| fig-cap: "Correlation matrixes of Hostility sexism toward women"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```


##### **Internal consistency**


```{r}
# 2. Alpha

mi_variable <- "hs_m"
result2 <- alphas(db_proc, c("hs_m_1", "hs_m_2", "hs_m_3"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("hs_m_1", "hs_m_2", "hs_m_3")], na.rm = TRUE)
```


##### **Confirmatory Factor Analysis**


```{r}
# 3. CFA

mardia(db_proc[,c("ps_m_1", "ps_m_2", "ps_m_3", 
                  "hs_m_1", "hs_m_2", "hs_m_3")], 
       na.rm = T, plot=F)


# model
model_cfa <- ' 
  psm =~ ps_m_1 + ps_m_2 + ps_m_3
  hsm =~ hs_m_1 + hs_m_2 + hs_m_3
  asi =~ psm + hsm '

# estimation 
m4_cfa <- cfa(model = model_cfa, 
              data = db_proc,
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m4_cfa_arg <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m4_cfa_cl <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m4_cfa_col <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m4_cfa_es <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m4_cfa_mex <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 
```


```{r}
#| label: tbl-7
#| tbl-cap: "Standardized Factor Loadings of Ambivalent Sexism all countries"
#| tbl-cap-location: top

cfa_tab_loadings(m4_cfa)$loadings_table


```

```{r}
#| label: tbl-8
#| tbl-cap: "Summary fit indices of Ambivalent Sexism"
#| tbl-cap-location: top

cfa_tab_fit(
  models = list(m4_cfa, m4_cfa_arg, m4_cfa_cl, m4_cfa_col, m4_cfa_es, m4_cfa_mex),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$fit_table


```

### Perception of gender inequality

We selected six items from the original scale developed by Schwartz-Salazar et al. [-@schwartz-salazar_development_2024] that have several subdimensions. The reduced scale has not being published before so we will explore the factor structure of this four items.


##### **Descriptive results**

```{r}
#| label: tbl-desc7
#| tbl-cap: "Descriptive statistics of Perception of gender inequality"
#| tbl-cap-location: top

describe_kable(db_proc, c("gen_in_1", "gen_in_2", "gen_in_3", "gen_in_4", "gen_in_5", "gen_in_6"))

```

```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("gen_in_1", "gen_in_2", "gen_in_3", "gen_in_4", "gen_in_5", "gen_in_6"))

```

```{r}
#| label: fig-10
#| fig-cap: "Correlation matrixes of Perception of gender inequality"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '80%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```


##### **Internal consistency**

```{r}
# 2. Alpha

mi_variable <- "gen_in"
result2 <- alphas(db_proc, c("gen_in_1", "gen_in_2", "gen_in_3", "gen_in_4", "gen_in_5", "gen_in_6"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("gen_in_1", "gen_in_2", "gen_in_3", "gen_in_4", "gen_in_5", "gen_in_6")], na.rm = TRUE)
```


##### **Confirmatory factor analysis**

```{r}
# 3. CFA

mardia(db_proc[,c("gen_in_1", "gen_in_2", "gen_in_3", 
                  "gen_in_4", "gen_in_5", "gen_in_6")], 
       na.rm = T, plot=F)


# model
model_cfa <- ' gender_inquality =~ gen_in_1 + gen_in_2 + gen_in_3 + gen_in_4 + gen_in_5 + gen_in_6 '

# estimation 
m5_cfa <- cfa(model = model_cfa, 
              data = db_proc,
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m5_cfa_arg <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m5_cfa_cl <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m5_cfa_col <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m5_cfa_es <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m5_cfa_mex <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 
```

```{r}
#| label: tbl-9
#| tbl-cap: "Standardized Factor Loadings of Perception of gender inequality all countries"
#| tbl-cap-location: top

cfa_tab_loadings(m5_cfa)$loadings_table


```

```{r}
#| label: tbl-10
#| tbl-cap: "Summary fit indices of Perception of gender inequality"
#| tbl-cap-location: top

cfa_tab_fit(
  models = list(m5_cfa, m5_cfa_arg, m5_cfa_cl, m5_cfa_col, m5_cfa_es, m5_cfa_mex),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$fit_table


```



#### Belief in sexism shift

##### **Descriptive results**

```{r}
#| label: tbl-desc8
#| tbl-cap: "Descriptive statistics of Belief in sexism shift"
#| tbl-cap-location: top

describe_kable(db_proc, c("shif_1", "shif_2", "shif_3"))

```

```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("shif_1", "shif_2", "shif_3"))

```

```{r}
#| label: fig-11
#| fig-cap: "Correlation matrixes of Belief in sexism shift"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '80%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```

##### **Internal consistency**


```{r}
# 2. Alpha

mi_variable <- "shif"
result2 <- alphas(db_proc, c("shif_1", "shif_2", "shif_3"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("shif_1", "shif_2", "shif_3")], na.rm = TRUE)
```


##### **Confirmatory factor analysis**

```{r}
# 3. CFA
mardia(db_proc[,c("shif_1", "shif_2", "shif_3")], 
       na.rm = T, plot=F)
# model
model_cfa <- ' shif_sexism =~ shif_1 + shif_2 + shif_3 '

# estimation 
m6_cfa <- cfa(model = model_cfa, 
              data = db_proc,
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m6_cfa_arg <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m6_cfa_cl <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m6_cfa_col <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m6_cfa_es <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m6_cfa_mex <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 
```

```{r}
#| label: tbl-11
#| tbl-cap: "Standardized Factor Loadings of Belief in sexism shift all countries"
#| tbl-cap-location: top


cfa_tab_loadings(m6_cfa)$loadings_table


```

```{r}
#| label: tbl-12
#| tbl-cap: "Summary fit indices of Belief in sexism shift"
#| tbl-cap-location: top

cfa_tab_fit(
  models = list(m6_cfa, m6_cfa_arg, m6_cfa_cl, m6_cfa_col, m6_cfa_es, m6_cfa_mex),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$fit_table
```


## Block 3. Contacts and rates

### Perception of social mobility


##### **Descriptive results**

```{r}
#| label: tbl-desc9
#| tbl-cap: "Descriptive statistics of Perception of social mobility"
#| tbl-cap-location: top

describe_kable(db_proc, c("mobi_up_1", "mobi_up_2", "mobi_up_3", "mobi_down_1", "mobi_down_2", "mobi_down_3"))

```

```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("mobi_up_1", "mobi_up_2", "mobi_up_3"))

res3 <- fit_correlations(db_proc, c("mobi_down_1", "mobi_down_2", "mobi_down_3"))
```

```{r}
#| label: fig-12
#| fig-cap: "Correlation matrixes of Perception of ascendent social mobility"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '80%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```

```{r}
#| label: fig-13
#| fig-cap: "Correlation matrixes of Perception of descendent social mobility"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '80%'

#Plot the matrix using corrplot

corr_plots(res3, db_proc, "SOGEDI")

```


##### **Internal consistency**

```{r}
# 2. Alpha

mi_variable <- "ascenmobi"
result2 <- alphas(db_proc, c("mobi_up_1", "mobi_up_2", "mobi_up_3"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("mobi_up_1", "mobi_up_2", "mobi_up_3")], na.rm = TRUE)
```

```{r}
# 2. Alpha

mi_variable <- "descenmobi"
result3 <- alphas(db_proc, c("mobi_down_1", "mobi_down_2", "mobi_down_3"), mi_variable)

result3$raw_alpha
result3$ord_alpha
result3$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("mobi_down_1", "mobi_down_2", "mobi_down_3")], na.rm = TRUE)
```


##### **Confirmatory factor analysis**

```{r}
# 3. CFA
mardia(db_proc[,c("mobi_up_1", "mobi_up_2", "mobi_up_3",
                  "mobi_down_1", "mobi_down_2", "mobi_down_3")], 
       na.rm = T, plot=F)

# model
model_cfa <- ' 
  ascen_mobi =~ mobi_up_1 + mobi_up_2 + mobi_up_3
  descen_mobi =~ mobi_down_1 + mobi_down_2 + mobi_down_3
   '

# estimation 
m7_cfa <- cfa(model = model_cfa, 
              data = db_proc,
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m7_cfa_arg <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m7_cfa_cl <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m7_cfa_col <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m7_cfa_es <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m7_cfa_mex <- cfa(model = model_cfa, 
              data = subset(db_proc, country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 
```

```{r}
#| label: tbl-13
#| tbl-cap: "Standardized Factor Loadings of Social mobility all countries"
#| tbl-cap-location: top


cfa_tab_loadings(m7_cfa)$loadings_table


```

```{r}
#| label: tbl-14
#| tbl-cap: "Summary fit indices of Social mobility"
#| tbl-cap-location: top

cfa_tab_fit(
  models = list(m7_cfa, m7_cfa_arg, m7_cfa_cl, m7_cfa_col, m7_cfa_es, m7_cfa_mex),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$fit_table
```


## Block 4. Stereotypes

### Stereotype content model: inmmorality

##### **Descriptive analysis**

```{r}
#| label: tbl-desc10
#| tbl-cap: "Descriptive statistics of Stereotype content model: inmmorality"
#| tbl-cap-location: top

describe_kable(db_proc, c("inm_1", "inm_2", "inm_3"))

```

```{r}
#| collapse: false
# 1. Correlations ppw

# fit pearson and polychoric
res2 <- fit_correlations(db_proc, c("inm_1", "inm_2", "inm_3"))

```

```{r}
#| label: fig-14
#| fig-cap: "Correlation matrixes of Stereotype content model: inmmorality"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '80%'

#Plot the matrix using corrplot

corr_plots(res2, db_proc, "SOGEDI")

```

##### **Internal consistency**

```{r}
# 2. Alpha

mi_variable <- "inm"
result2 <- alphas(db_proc, c("inm_1", "inm_2", "inm_3"), mi_variable)

result2$raw_alpha
result2$ord_alpha
result2$new_var_summary

db_proc[[mi_variable]] <- rowMeans(db_proc[, c("inm_1", "inm_2", "inm_3")], na.rm = TRUE)
```

##### **Confirmatory factor analysis**

```{r}
# 3. CFA
mardia(db_proc[,c("inm_1", "inm_2", "inm_3")], 
       na.rm = T, plot=F)

# model
model_cfa <- ' 
  inmorality =~ inm_1 + inm_2 + inm_3
   '

# estimation 

# gender condition
m8_cfa_men <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 0),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_women <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 


# men

m8_cfa_arg_men <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 0 & country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_cl_men <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 0 & country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_col_men <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 0 & country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_es_men <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 0 & country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_mex_men <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 0 & country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

# women

m8_cfa_arg_women <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 1 & country_residence_recoded == 1),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_cl_women <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 1 & country_residence_recoded == 3),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_col_women <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 1 & country_residence_recoded == 4),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_es_women <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 1 & country_residence_recoded == 9),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

m8_cfa_mex_women <- cfa(model = model_cfa, 
              data = subset(db_proc, condi_gender == 1 & country_residence_recoded == 13),
              estimator = "MLR",
              ordered = F,
              std.lv = F) 

# class condition
m8_cfa_poor <- cfa(model = model_cfa, 
                   data = subset(db_proc, condi_class == 0),
                   estimator = "MLR",
                   ordered = F,
                   std.lv = F) 

m8_cfa_rich <- cfa(model = model_cfa, 
                   data = subset(db_proc, condi_class == 1),
                   estimator = "MLR",
                   ordered = F,
                   std.lv = F) 

# poor

m8_cfa_arg_poor <- cfa(model = model_cfa, 
                      data = subset(db_proc, condi_class == 0 & country_residence_recoded == 1),
                      estimator = "MLR",
                      ordered = F,
                      std.lv = F) 

m8_cfa_cl_poor <- cfa(model = model_cfa, 
                     data = subset(db_proc, condi_class == 0 & country_residence_recoded == 3),
                     estimator = "MLR",
                     ordered = F,
                     std.lv = F) 

m8_cfa_col_poor <- cfa(model = model_cfa, 
                      data = subset(db_proc, condi_class == 0 & country_residence_recoded == 4),
                      estimator = "MLR",
                      ordered = F,
                      std.lv = F) 

m8_cfa_es_poor <- cfa(model = model_cfa, 
                     data = subset(db_proc, condi_class == 0 & country_residence_recoded == 9),
                     estimator = "MLR",
                     ordered = F,
                     std.lv = F) 

m8_cfa_mex_poor <- cfa(model = model_cfa, 
                      data = subset(db_proc, condi_class == 0 & country_residence_recoded == 13),
                      estimator = "MLR",
                      ordered = F,
                      std.lv = F) 

# rich

m8_cfa_arg_rich <- cfa(model = model_cfa, 
                        data = subset(db_proc, condi_class == 1 & country_residence_recoded == 1),
                        estimator = "MLR",
                        ordered = F,
                        std.lv = F) 

m8_cfa_cl_rich <- cfa(model = model_cfa, 
                       data = subset(db_proc, condi_class == 1 & country_residence_recoded == 3),
                       estimator = "MLR",
                       ordered = F,
                       std.lv = F) 

m8_cfa_col_rich <- cfa(model = model_cfa, 
                        data = subset(db_proc, condi_class == 1 & country_residence_recoded == 4),
                        estimator = "MLR",
                        ordered = F,
                        std.lv = F) 

m8_cfa_es_rich <- cfa(model = model_cfa, 
                       data = subset(db_proc, condi_class == 1 & country_residence_recoded == 9),
                       estimator = "MLR",
                       ordered = F,
                       std.lv = F) 

m8_cfa_mex_rich <- cfa(model = model_cfa, 
                        data = subset(db_proc, condi_class == 1 & country_residence_recoded == 13),
                        estimator = "MLR",
                        ordered = F,
                        std.lv = F) 

```

```{r}
#| label: tbl-15
#| tbl-cap: "Standardized Factor Loadings of SStereotype content model: inmmorality"
#| tbl-cap-location: top




```

```{r}
#| label: tbl-16
#| tbl-cap: "Summary fit indices of Stereotype content model: inmmorality"
#| tbl-cap-location: top
colnames_fit  <- c("","Target","$N$","Estimator","$\\chi^2$ (df)","CFI","TLI","RMSEA 90% CI [Lower-Upper]", "SRMR", "AIC")


bind_rows(
cfa_tab_fit(
  models = list(m8_cfa_men, m8_cfa_arg_men, m8_cfa_cl_men, m8_cfa_col_men, m8_cfa_es_men, m8_cfa_mex_men),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$sum_fit %>% 
  mutate(target = "Men")
,
cfa_tab_fit(
  models = list(m8_cfa_women, m8_cfa_arg_women, m8_cfa_cl_women, m8_cfa_col_women, m8_cfa_es_women, m8_cfa_mex_women),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$sum_fit %>% 
  mutate(target = "Women")
,
cfa_tab_fit(
  models = list(m8_cfa_poor, m8_cfa_arg_poor, m8_cfa_cl_poor, m8_cfa_col_poor, m8_cfa_es_poor, m8_cfa_mex_poor),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$sum_fit %>% 
  mutate(target = "Poor")
,
cfa_tab_fit(
  models = list(m8_cfa_rich, m8_cfa_arg_rich, m8_cfa_cl_rich, m8_cfa_col_rich, m8_cfa_es_rich, m8_cfa_mex_rich),
  country_names = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico")
)$sum_fit %>% 
  mutate(target = "Rich")
) %>% 
  select(country, target, everything()) %>% 
  mutate(country = factor(country, levels = c("Overall scores", "Argentina", "Chile", "Colombia", "Spain", "MÃ©xico"))) %>% 
  group_by(country) %>% 
  arrange(country) %>% 
  kableExtra::kable(
  format     = "markdown", 
  digits     = 3,
  booktabs   = TRUE,
  col.names  = colnames_fit,
  caption    = NULL
) %>%
  kableExtra::kable_styling(
    full_width        = TRUE,
    font_size         = 11,
    latex_options     = "HOLD_position",
    bootstrap_options = c("striped", "bordered")
  ) %>% 
  kableExtra::collapse_rows(columns = 1)
```

